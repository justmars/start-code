{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Boilerplate","text":"<p><code>git clone justmars/start_code</code> target</p>"},{"location":"#python-version","title":"python-version","text":"<p>Check <code>.python-version</code>, default is 3.11.1</p> <p>Warning</p> <p>Run <code>poetry env use $(pyenv which python)</code> if <code>.python-version</code> has been updated. Review created .venv folder's <code>pyvenv.cfg</code> this should show the version declared in <code>.python-version</code></p>"},{"location":"#app","title":"app","text":"<ol> <li>Rename the root <code>/src</code> folder to target or delete</li> <li>The target will be included in <code>poetry build</code></li> <li>The sole <code>__init__.py</code> file in the root folder will have a single variable <code>__version__</code> equal to \"0.0.1\"</li> <li>The version should match the version found in <code>pyproject.toml</code></li> </ol>"},{"location":"#pyprojecttoml","title":"pyproject.toml","text":"TOML<pre><code>[tool.poetry]\nname = \"src\" # _target_\ndescription = \"Boilerplate Python Code\"\nversion = \"0.0.1\" # see tests/test_version\n</code></pre> <p>Warning</p> <p>If publishing to pypi, ensure <code>name</code> doesn't exist yet.</p> <p>Note</p> <p>Remove dependencies that aren't applicable.</p>"},{"location":"#mkdocsyml","title":"mkdocs.yml","text":"YAML<pre><code>site_name: start_code Docs # match with pyproject.toml\nsite_description: start_code description # match with pyproject.toml\nrepo_url: https://github.com/justmars # change justmars to _target_\n...\nnav:\n- Overview: index.md # adjust\n- Gotchas: gotchas.md # remove\n</code></pre>"},{"location":"#pregit","title":"pregit","text":"<ol> <li>Revise<code>README.md</code>; do replace all <code>start-code</code> with target</li> <li>Ensure parity of <code>pyproject.toml</code> with <code>mkdocs.yml</code></li> <li>Add applicable classifiers</li> <li>Add <code>.vscode</code> to <code>.gitignore</code></li> <li>Create github repository</li> <li>Add github <code>repo_url</code> to <code>mkdocs.yml</code></li> <li>Edit <code>/docs/index.md</code>, remove<code>/docs/gotchas.md</code></li> <li>Edit <code>/tests/test_version</code> by replacing <code>src</code></li> <li>Run <code>poetry shell</code></li> <li>Run <code>poetry update</code></li> <li>Run <code>pytest</code></li> <li>Review with <code>mkdocs serve</code></li> </ol>"},{"location":"#github","title":"github","text":"Bash<pre><code>rm -rf .git # remove cloned .git file\ngit init -b main\ngit add .\npre-commit autoupdate\npre-commit run --all-files\ngit commit -m \"setup\"\ngit remote add origin &lt;repo_url&gt;\ngit push -u origin main\n</code></pre>"},{"location":"gotchas/","title":"Gotchas","text":"<ul> <li>When <code>poetry update</code> fails, search for libraries.</li> <li>Upgrade pip: <code>pip3 install -U pip</code> inside the .venv, i.e. in <code>poetry shell</code></li> <li>Use <code>pip3</code> instead of <code>poetry add</code> or <code>poetry update</code> when third-party library install fails.</li> </ul>"}]}